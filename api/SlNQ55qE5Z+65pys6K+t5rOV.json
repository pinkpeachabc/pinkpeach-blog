{"title":"JSP的基本语法","date":"2020-03-04T06:42:17.000Z","date_formatted":{"ll":"2020年3月4日","L":"2020/03/04","MM-DD":"03-04"},"link":"JSP的基本语法","comments":true,"tags":["JSP"],"categories":["JavaWeb"],"updated":"2020-08-16T13:30:21.449Z","content":"<h2 id=\"jsp-简介\">JSP 简介<a title=\"#jsp-简介\" href=\"#jsp-简介\"></a></h2>\n<blockquote>\n<p>前两章写的响应和 session，这次我来说一下 jsp 😀</p>\n</blockquote>\n<p><strong>什么是 JSP</strong></p>\n<p>JSP 全名为 Java Server Pages，中文名叫 java 服务器页面。在传统的网页HTML文件(<em>.htm,</em>.html)中插入 Java 程序段和 JSP 标记，缀名为(*.jsp)。</p>\n<p><strong>为什么要有 JSP</strong></p>\n<p>直接使用 Html 文件是没有办法输出 Java 当中的信息，使用 servlet 来去输出一个网页非常的麻烦。于是就出现了jsp，又能写 html，又能写 Java 代码</p>\n<p><strong>JSP 的组成部分</strong></p>\n<p>静态数据，如 HTML</p>\n<p>JSP 脚本元素和变量</p>\n<p>JSP 指令，如 include 指令</p>\n<p>JSP 标签动作</p>\n<p>用户自定义标签</p>\n<h2 id=\"jsp脚本元素和变量\">JSP脚本元素和变量<a title=\"#jsp脚本元素和变量\" href=\"#jsp脚本元素和变量\"></a></h2>\n<p><strong>在 JSP 当中写 Java 代码</strong></p>\n<p><code>&lt;%java代码%&gt;</code>内部的 java 代码翻译到 service 方法的内部<br>\n<code>&lt;%=java变量或表达式&gt;</code>会被翻译成 service 方法内部 <code>out.print()</code><br>\n<code>&lt;%!java代码%&gt;</code>会被翻译成 servlet 的成员的内容<br>\n<strong>JSP 注释</strong></p>\n<p>HTML 注释：<code>&lt;!--注释内容--&gt;</code><br>\n可见范围 jsp 源码、翻译后的 servlet、页面<br>\n<strong>Java 注释</strong></p>\n<p><code>//单行注释  /*多行注释*/</code><br>\n可见范围 jsp 源码 翻译后的 servlet,页面中看不到<br>\n<strong>Jsp 注释</strong></p>\n<p><code>&lt;%--注释内容--%&gt;</code><br>\n可见范围 jsp 源码可见</p>\n<h2 id=\"jsp-指令\">JSP 指令<a title=\"#jsp-指令\" href=\"#jsp-指令\"></a></h2>\n<p><strong>什么是指令</strong></p>\n<blockquote>\n<p>JSP 指令用于设置整个 JSP 页面的相关信息，以及用于 JSP 页面与其它容器之间的通信。</p>\n</blockquote>\n<p><strong>有哪些指令</strong></p>\n<blockquote>\n<p>page 指令\tinclude 指令\ttaglib 指令</p>\n</blockquote>\n<p><strong>page 指令</strong></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"string\">&quot;指令&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>\n<p>用于设定整个 JSP 页面的属性和相关功能，多个属性之间使用空格隔开。page 指令共有 11 个属性分别是：</p>\n<p>​\t<em>contentType</em><br>\n​\tcontentType 属性指定 JSP 页面的 MIME 和编码格式</p>\n<p>​\t<em>buffer</em><br>\n​\t用来设置输出流缓冲区,缓冲区的作用就是为了提高 IO 性能,也就是说减少 write 的次数</p>\n<p>​\t<em>language 属性</em><br>\n​\t指定页面中使用的脚本语言种类,目前只支持 java</p>\n<p>​\tisErrorPage<br>\n​\t允许指定的 JSP 页面为错误处理页面</p>\n<p>​\t<em>autoFlush</em><br>\n​\t用来指定当输出流缓冲区满了的时候，是否自动刷新缓冲区</p>\n<p>​\t<em>errorPage</em><br>\n​\t如果当前页面发生异常,网页会重定向到 errorPage 所指定的页面进行处理</p>\n<p>​\t<em>extends</em><br>\n​\t用于指定该 JSP 生成的 servlet 继承自哪个父类,必须指定包名加类名</p>\n<p>​\t<em>session</em><br>\n​\t指定当前页面是否能获得当前用户的 session 对象,缺省是 true<br>\n​\t如果指定为 false,那么在该页面中无法使用 session，使用的话会提示500错误</p>\n<p>​\t<em>import</em><br>\n​\t在 JSP 中引入 Java 的包和类，多个包之间以逗号隔开</p>\n<p>​\t<em>info</em><br>\n​\t用来设置该 jsp 文件的介绍信息</p>\n<p>​\t<em>pageEncoding</em><br>\n​\tpageEncoding 属性用来指定 JSP 文件的编码格式</p>\n<p>​\t<em>isELIgnored</em><br>\n​\t用来标示是否支持 EL 表达式</p>\n<p>​\t<em>isThreadSafe</em><br>\n​\t缺省值为 true<br>\n​\t指定该 JSP 文件是否支持多线程访问</p>\n<p><strong>include指令</strong></p>\n<p>表示在JSP编译时插入一个包含文件或者代码的文件，include 指令所包含的文件名不能是一个变量 url,只能是静态的文件名。</p>\n<blockquote>\n<p>静态包含</p>\n</blockquote>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@include</span> file=<span class=\"string\">&quot;header.jsp&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@include</span> file=<span class=\"string\">&quot;footer.jsp&quot;</span>%&gt;</span><br></pre></td></tr></table></figure>\n<p>将两个 jsp 页面接着到一起， 然后再翻译成 servlet</p>\n<p><strong>taglib指令</strong></p>\n<p>声明 JSP 文件使用了标签库</p>\n<blockquote>\n<p>有哪些标签库</p>\n</blockquote>\n<p>JSP 标准标签库，第三方标签库，自定义标签库</p>\n<h2 id=\"jsp-标签动作\">JSP 标签动作<a title=\"#jsp-标签动作\" href=\"#jsp-标签动作\"></a></h2>\n<p><strong>页面包含</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;jsp:include page=<span class=\"string\">&quot;被包含的页面&quot;</span>&gt;&lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>动态包含</p>\n</blockquote>\n<p>各自翻译自己的页面，然后再引入</p>\n<p><strong>请求转发</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;jsp:forward page=<span class=\"string\">&quot;要转发的资源&quot;</span>&gt;&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"jsp-隐式对象\">JSP 隐式对象<a title=\"#jsp-隐式对象\" href=\"#jsp-隐式对象\"></a></h2>\n<p><em>out</em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//out的类型：JspWriter</span></span><br><span class=\"line\"><span class=\"comment\">//out作用就是想客户端输出内容 out.write()</span></span><br><span class=\"line\"><span class=\"comment\">//out缓冲区默认8kb</span></span><br><span class=\"line\"><span class=\"comment\">//可以设置成0 代表关闭out缓冲区内容直接写到respons缓冲区</span></span><br><span class=\"line\"><span class=\"comment\">//out写的内容写到out缓冲区当中</span></span><br><span class=\"line\"><span class=\"comment\">//最后再把out缓冲区当中的内容合并到response缓冲区当中</span></span><br></pre></td></tr></table></figure>\n<p><em>request</em><br>\n得到用户请求信息对象</p>\n<p><em>response</em><br>\n服务器向客户端的响应对象</p>\n<p><em>config</em><br>\n服务器配置，可以取得初始化参数</p>\n<p><em>session</em><br>\n用来保存用户会话的信息</p>\n<p><em>application</em><br>\n所有用户的共享信息，就是 servletContext</p>\n<p><em>page</em><br>\n指当前页面转换后的 Servlet 类的实例</p>\n<p><em>pageContext</em><br>\njsp 页面的上下文对象</p>\n<blockquote>\n<p>是一个域对象</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setAttribute(String name,Object obj)</span><br><span class=\"line\">getAttribute(String name)</span><br><span class=\"line\">removeAttrbute(String name)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可以向指定的其他域中存取数据</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setAttribute(String name,Object obj,<span class=\"type\">int</span> scope)</span><br><span class=\"line\">setAttribute(“name”,<span class=\"string\">&quot;lk&quot;</span>,PageContext.REQUEST_SCOPE);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getAttribute(String name,<span class=\"type\">int</span> scope)</span><br><span class=\"line\">getAttribute(<span class=\"string\">&quot;lk&quot;</span>,PageContext.REQUEST_SCOPE)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">removeAttrbute(String name,<span class=\"type\">int</span> scope)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">findAttribute(String name)</span><br><span class=\"line\"><span class=\"comment\">//自动到所有的域当中找数据</span></span><br><span class=\"line\"><span class=\"comment\">//从小到大的范围搜索数据</span></span><br><span class=\"line\"><span class=\"comment\">//依次从 pageContext 域，request 域，session 域，application 域中获取属性</span></span><br><span class=\"line\"><span class=\"comment\">//在某个域中获取后将不在向后寻找</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可以获得其他 8 大隐式对象</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pageContext.getRequest()</span><br><span class=\"line\">pageContext.getSession()</span><br></pre></td></tr></table></figure>\n<p><em>exception</em><br>\n表示 JSP 页面所发生的异常，在错误页中才起作用<br>\n只有是错误页面的时候，才会有该对象</p>\n","prev":{"title":"EL与JSTL","link":"EL与JSTL"},"next":{"title":"cookie与Session","link":"JavaWeb-会话"},"plink":"https://pinkpeachabc.cn/JSP的基本语法/","toc":[{"id":"jsp-简介","title":"JSP 简介","index":"1"},{"id":"jsp脚本元素和变量","title":"JSP脚本元素和变量","index":"2"},{"id":"jsp-指令","title":"JSP 指令","index":"3"},{"id":"jsp-标签动作","title":"JSP 标签动作","index":"4"},{"id":"jsp-隐式对象","title":"JSP 隐式对象","index":"5"}],"reward":true,"copyright":{"author":"PinkPeach","link":"<a href=\"https://pinkpeachabc.cn/JSP的基本语法/\" title=\"JSP的基本语法\">https://pinkpeachabc.cn/JSP的基本语法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}